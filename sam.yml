AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless - Friends API

# Swagger implementation Example
# https://blog.jayway.com/2016/09/18/introduction-swagger-cloudformation-api-gateway/

# This link details the need for explictly creating AWS::Serverless::Api resource
# and the AWS::ApiGateway::BasePathMapping.  There's a workaround in here that details
# the need to add a DependsOn in the BasePathMapping on the creation of the function
# to avoid a circular reference.
# https://github.com/awslabs/serverless-application-model/issues/119

# Implementation of the above BasePathMapping
# https://github.com/jolexa/aws-apigw-acm/blob/master/apigw-lambdas.yml

# If confused by above, read this similiar thread from serverless framework and 
# review comment from JBerges commented on Nov 14, 2017
# https://github.com/serverless/serverless/issues/2233

# Or this one...
# https://github.com/awslabs/serverless-application-model/issues/192

# Monitor this SAM Issue for a long term solution that incorporates BasePathMapping
# into Native SAM rather than the need to bring in CloudFormation elements
# https://github.com/awslabs/serverless-application-model/issues/248




Parameters: 
  DomainName:
    Description: Domain name for your website (example.com)
    Type: String
  Environment:
    Description: 'AWS or AWS-SAM-LOCAL'
    Type: String
    Default: 'AWS'
    AllowedValues: 
      - 'AWS'
      - 'AWS-SAM-LOCAL'     
  PathToAPI:
    Description: 'The path to the API for API Gateway'
    Type: String 
    Default: '/'
    AllowedValues: 
      - '/'
      - '/friends'     
  # Link below, introduces a parameter-values parameter for the AWS-SAM-LOCAL cli commands.
  # Using this parameter to distinguish between AWS CodePipeline use of this
  # SAM file and the way AWS-SAM-LOCAL uses this SAM file.
  # AWS SAM Local is using the index.js file in dist/ folder.  CodePipeline
  # CloudFormation action will find the index.js in the root folder of the 
  # packaged ZIP file
  # https://github.com/awslabs/aws-sam-local/pull/123  
  PathToHandler: 
    Description: 'The path to index.js'
    Type: String 
    Default: ''
    AllowedValues: 
      - ''
      - dist/       

Conditions:
  IsAWS: !Equals [!Ref Environment, 'AWS']
  IsLocal: !Equals [!Ref Environment, 'AWS-SAM-LOCAL']

Resources:

  FriendsApi:
    Type: AWS::Serverless::Api
    Condition: IsAWS
    Properties:
      StageName: prod
      DefinitionBody:
        swagger: '2.0'
        info:
          version: '2016-08-18T18:08:34Z'
          title:
            Fn::Sub: # Had to use Fn::Sub because of this link...https://github.com/awslabs/aws-sam-local/issues/135
              - '${AWS::StackName}--apig-${NoSpaceRegion}'
              - NoSpaceRegion: !Join ['', !Split ['-', !Ref 'AWS::Region']]
        #basePath: /friends
        schemes:
        - https
        paths:
          '/':
            get:
              produces:
              - application/json
              responses: 
                '200':
                  description: '200 response'
              x-amazon-apigateway-integration:
                httpMethod: POST # must be POST for lambda
                type: aws_proxy
                uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FriendsFunction.Arn}/invocations'

  FriendsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: !Sub '${PathToHandler}index.handler'
      Runtime: nodejs6.10
      CodeUri: ./dist/ 
      FunctionName: 
        Fn::Sub: # Had to use Fn::Sub because of this link...https://github.com/awslabs/aws-sam-local/issues/135
          - '${AWS::StackName}--lambda-${NoSpaceRegion}'
          - NoSpaceRegion: !Join ['', !Split ['-', !Ref 'AWS::Region']]
      Events:
        ListFriendsLocal:
          Type: Api
          Condition: IsLocal
          Properties:
            Path: /friends
            Method: get
            RestApiId: !Ref FriendsApi
        ListFriends:
          Type: Api
          Condition: IsAWS          
          Properties:
            Path: / # Tried to use a !Ref here but there's an issue with SAM
            Method: get
            RestApiId: !Ref FriendsApi            
            


  BasePathMapping:
    DependsOn: FriendsApiprodStage
    Type: AWS::ApiGateway::BasePathMapping
    Condition: IsAWS    
    Properties:
      BasePath:
        Fn::Sub: # Had to use Fn::Sub because of this link...https://github.com/awslabs/aws-sam-local/issues/135
          - '${FunctionName}'
          - FunctionName: !Select [2, !Split ['-', !Ref 'AWS::StackName']]
      DomainName: !Ref DomainName
      RestApiId: !Ref FriendsApi
      Stage: prod


  FriendsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: 
        Fn::Sub: # Had to use Fn::Sub because of this link...https://github.com/awslabs/aws-sam-local/issues/135
          - '${SchemaName}.${FunctionName}'
          - SchemaName: !Select [0, !Split ['-', !Ref 'AWS::StackName']]
            FunctionName: !Select [2, !Split ['-', !Ref 'AWS::StackName']]
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      KeySchema:
        - AttributeName: FriendId
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: FriendId
          AttributeType: S


Outputs:
  StackName:
    Value: !Sub '${AWS::StackName}'
  FriendsFunctionArn:
    Value: !GetAtt FriendsFunction.Arn

  